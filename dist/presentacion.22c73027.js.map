{"mappings":"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","sources":["node_modules/lazyframe/dist/lazyframe.min.js","node_modules/lazyframe/src/lazyframe.js"],"sourcesContent":[null,"import './scss/lazyframe.scss'\n\nconst Lazyframe = () => {\n\n  let settings;\n\n  const elements = [];\n\n  const defaults = {\n    vendor: undefined,\n    id: undefined,\n    src: undefined,\n    thumbnail: undefined,\n    title: undefined,\n    initialized: false,\n    y: undefined,\n    debounce: 250,\n    lazyload: true,\n    autoplay: true,\n    initinview: false,\n    onLoad: (l) => {},\n    onAppend: (l) => {},\n    onThumbnailLoad: (img) => {}\n  };\n\n  const constants = {\n    regex: {\n      youtube_nocookie: /(?:youtube-nocookie\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=)))([a-zA-Z0-9_-]{6,11})/,\n      youtube: /(?:youtube\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=))|youtu\\.be\\/)([a-zA-Z0-9_-]{6,11})/,\n      vimeo: /vimeo\\.com\\/(?:video\\/)?([0-9]*)(?:\\?|)/,\n    },\n    condition: {\n      youtube: (m) => (m && m[1].length == 11 ? m[1] : false),\n      youtube_nocookie: (m) => (m && m[1].length == 11 ? m[1] : false),\n      vimeo: (m) =>\n        (m && m[1].length === 9) || m[1].length === 8 ? m[1] : false,\n    },\n    src: {\n      youtube: (s) =>\n        `https://www.youtube.com/embed/${s.id}/?autoplay=${\n          s.autoplay ? \"1\" : \"0\"\n        }&${s.query}`,\n      youtube_nocookie: (s) =>\n        `https://www.youtube-nocookie.com/embed/${s.id}/?autoplay=${\n          s.autoplay ? \"1\" : \"0\"\n        }&${s.query}`,\n      vimeo: (s) =>\n        `https://player.vimeo.com/video/${s.id}/?autoplay=${\n          s.autoplay ? \"1\" : \"0\"\n        }&${s.query}`,\n    },\n    endpoint: (s) => `https://noembed.com/embed?url=${s.src}`,\n    response: {\n      title: (r) => r.title,\n      thumbnail: (r) => r.thumbnail_url,\n    },\n  };\n\n  function init(elements, ...args) {\n    settings = Object.assign({}, defaults, args[0]);\n\n    if (typeof elements === 'string') {\n\n      const selector = document.querySelectorAll(elements);\n      for (let i = 0; i < selector.length; i++) {\n        loop(selector[i]);\n      }\n    } else if (typeof elements.length === 'undefined'){\n      loop(elements);\n    } else {\n      for (let i = 0; i < elements.length; i++) {\n        loop(elements[i]);\n      }\n    }\n\n    if (settings.lazyload) {\n      scroll();\n    }\n\n  }\n\n  function loop(el) {\n\n    if(el instanceof HTMLElement === false ||\n       el.classList.contains('lazyframe--loaded')) return;\n\n    const lazyframe = {\n      el: el,\n      settings: setup(el),\n    };\n\n    lazyframe.el.addEventListener('click', () => {\n      lazyframe.el.appendChild(lazyframe.iframe);\n\n      const iframe = el.querySelectorAll('iframe');\n      lazyframe.settings.onAppend.call(this, iframe[0]);\n    });\n\n    if (settings.lazyload) {\n      build(lazyframe);\n    } else {\n      api(lazyframe, !!lazyframe.settings.thumbnail);\n    }\n\n  }\n\n  function setup(el) {\n\n    const attr = Array.prototype.slice.apply(el.attributes)\n     .filter(att => att.value !== '')\n     .reduce((obj, curr) => {\n        let name = curr.name.indexOf('data-') === 0 ? curr.name.split('data-')[1] : curr.name;\n        obj[name] = curr.value;\n        return obj;\n     }, {});\n\n    const options = Object.assign({},\n      settings,\n      attr,\n      {\n        y: el.offsetTop,\n        originalSrc: attr.src,\n        query: getQuery(attr.src)\n      }\n    );\n\n    if (options.vendor) {\n      const match = options.src.match(constants.regex[options.vendor]);\n      options.id = constants.condition[options.vendor](match);\n    }\n\n    return options;\n\n  }\n\n  function getQuery(src) {\n    const query = src.split('?');\n    return query[1] ? query[1] : null\n  }\n\n  function useApi(settings) {\n    if (!settings.vendor) return false;\n    return !settings.title || !settings.thumbnail;\n  }\n\n  function api(lazyframe) {\n\n    if (useApi(lazyframe.settings)) {\n      send(lazyframe, (err, data) => {\n        if (err) return;\n\n        const response = data[0];\n        const _l = data[1];\n\n        if (!_l.settings.title) {\n          _l.settings.title = constants.response.title(response);\n        }\n        if (!_l.settings.thumbnail) {\n          const url = constants.response.thumbnail(response);\n          _l.settings.thumbnail = url;\n          lazyframe.settings.onThumbnailLoad.call(this, url);\n        }\n        build(_l, true);\n\n      });\n\n    }else{\n      build(lazyframe, true);\n    }\n\n  }\n\n  function send(lazyframe, cb) {\n\n    const endpoint = constants.endpoint(lazyframe.settings);\n    const request = new XMLHttpRequest();\n\n    request.open('GET', endpoint, true);\n\n    request.onload = function() {\n      if (request.status >= 200 && request.status < 400) {\n        const data = JSON.parse(request.responseText);\n        cb(null, [data, lazyframe]);\n      } else {\n        cb(true);\n      }\n    };\n\n    request.onerror = function() {\n      cb(true);\n    };\n\n    request.send();\n\n  }\n\n  function scroll() {\n\n    const height = window.innerHeight;\n    let count = elements.length;\n    const initElement = (el, i) => {\n      el.settings.initialized = true;\n      el.el.classList.add('lazyframe--loaded');\n      count--;\n      api(el);\n\n      if (el.settings.initinview) {\n        el.el.click();\n      }\n\n      el.settings.onLoad.call(this, el);\n    }\n\n    elements\n      .filter(el => el.settings.y < height)\n      .forEach(initElement);\n\n    const onScroll = debounce(() => {\n\n      up = lastY < window.pageYOffset;\n      lastY = window.pageYOffset;\n\n      if (up) {\n        elements\n          .filter(el => el.settings.y < (height + lastY) && el.settings.initialized === false)\n          .forEach(initElement);\n      }\n\n      if (count === 0) {\n        window.removeEventListener('scroll', onScroll, false);\n      }\n\n    }, settings.debounce);\n\n    let lastY = 0;\n    let up = false;\n\n    window.addEventListener('scroll', onScroll, false);\n\n    function debounce(func, wait, immediate) {\n      let timeout;\n      return function() {\n        let context = this, args = arguments;\n        let later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n  }\n\n  function build(lazyframe, loadImage) {\n\n    lazyframe.iframe = getIframe(lazyframe.settings);\n\n    if (lazyframe.settings.thumbnail && loadImage) {\n      lazyframe.el.style.backgroundImage = `url(${lazyframe.settings.thumbnail})`;\n    }\n\n    if (lazyframe.settings.title && lazyframe.el.children.length === 0) {\n      const docfrag = document.createDocumentFragment(),\n            titleNode = document.createElement('span');\n\n      titleNode.className = 'lazyframe__title';\n      titleNode.innerHTML = lazyframe.settings.title;\n      docfrag.appendChild(titleNode);\n\n      lazyframe.el.appendChild(docfrag);\n    }\n\n    if (!settings.lazyload) {\n      lazyframe.el.classList.add('lazyframe--loaded');\n      lazyframe.settings.onLoad.call(this, lazyframe);\n      elements.push(lazyframe);\n    }\n\n    if (!lazyframe.settings.initialized) {\n      elements.push(lazyframe);\n    }\n\n  }\n\n  function getIframe(settings) {\n\n    const docfrag = document.createDocumentFragment();\n    const iframeNode = document.createElement('iframe');\n\n    if (settings.vendor) {\n      settings.src = constants.src[settings.vendor](settings);\n    }\n\n    iframeNode.setAttribute('id', `lazyframe-${settings.id}`);\n    iframeNode.setAttribute('src', settings.src);\n    iframeNode.setAttribute('frameborder', 0);\n    iframeNode.setAttribute('allowfullscreen', '');\n    \n    if (settings.autoplay) {\n      iframeNode.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture';\n    }\n\n    docfrag.appendChild(iframeNode);\n    return docfrag;\n\n  }\n\n  return init;\n\n}\n\nconst lf = Lazyframe();\n\nexport default lf;\n"],"names":["settings","elements","defaults","vendor","undefined","id","src","thumbnail","title","initialized","y","debounce","lazyload","autoplay","initinview","onLoad","l","onAppend","onThumbnailLoad","img","constants","regex","youtube_nocookie","youtube","vimeo","condition","m","length","s","query","endpoint","response","r","thumbnail_url","loop","el","HTMLElement","classList","contains","lazyframe","setup","addEventListener","appendChild","iframe","querySelectorAll","call","_this","build","api","attr","Array","prototype","slice","apply","attributes","filter","att","value","reduce","obj","curr","name","indexOf","split","options","_extends","offsetTop","originalSrc","match","useApi","cb","request","XMLHttpRequest","open","onload","status","data","JSON","parse","responseText","onerror","send","err","_l","url","_this2","scroll","height","window","innerHeight","count","initElement","i","add","click","_this3","forEach","func","wait","immediate","timeout","onScroll","up","lastY","pageYOffset","removeEventListener","context","this","args","arguments","later","callNow","clearTimeout","setTimeout","loadImage","docfrag","document","createDocumentFragment","iframeNode","createElement","setAttribute","allow","getIframe","style","backgroundImage","children","titleNode","className","innerHTML","push","selector","Lazyframe"],"version":3,"file":"presentacion.22c73027.js.map","sourceRoot":"/__parcel_source_root/"}